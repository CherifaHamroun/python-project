    input_box_2 = pygame.Rect(0, 200, 210, 32)
    color2 = color_inactive
    active2 = False
    text2 = ''
    done2 = False
    while not done2:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                done = True
            if event.type == pygame.MOUSEBUTTONDOWN:
                # If the user clicked on the input_box rect.
                if input_box_2.collidepoint(event.pos):
                    # Toggle the active variable.
                    active2 = not active2
                else:
                    active2 = False
                # Change the current color of the input box.
                color2 = color_active if active2 else color_inactive
            if event.type == pygame.KEYDOWN:
                if active:
                    if event.key == pygame.K_RETURN:
                        print(text2)
                        text2 = ''
                    elif event.key == pygame.K_BACKSPACE:
                        text2 = text2[:-1]
                    else:
                        text2 += event.unicode
        # Render the current text.
        txt_surface2 = inputfont.render(text2, True, color2)
        # Resize the box if the text is too long.
        width2 = max(200, txt_surface2.get_width()+10)
        input_box_2.w = width2
        # Blit the text.
        screen.blit(txt_surface2, (input_box_2.x+5, input_box_2.y+5))
        # Blit the input_box_1 rect.
        pygame.draw.rect(screen, color2, input_box_2, 2)
        draw_text('Etat initial',fontmin,light,windowSurface,200,150,1)
        pygame.display.flip()
        clock.tick(30)